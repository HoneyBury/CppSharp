# 工作流的名称，会显示在 GitHub 的 "Actions" 页面上
name: Create Project Release

# 触发条件
on:
  push:
    tags:
      - 'v*'

jobs:
  create-release-assets:
    name: Build, Document, and Release
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      # 步骤 1: 检出代码
      - name: Checkout repository code
        uses: actions/checkout@v4

      # 步骤 2: 安装 Pandoc, XeLaTeX 引擎, 以及支持 Emoji 的字体 (已修改)
      # 1. texlive-xetex: 安装 xelatex 引擎
      # 2. fonts-noto-color-emoji: 安装 Google Noto 字体，它包含了对 Emoji 的良好支持
      - name: Install Pandoc and XeLaTeX with Emoji support
        run: |
          sudo apt-get update
          sudo apt-get install -y pandoc texlive-xetex fonts-noto-color-emoji

      # 步骤 3: 提取版本号并进行校验
      - name: Extract and Verify Version
        id: version_check
        run: |
          TAG_NAME=${{ github.ref_name }}
          echo "Git Tag: ${TAG_NAME}"
          
          CMAKE_VERSION=$(grep -oP 'project\(.*?VERSION \K[0-9]+\.[0-9]+\.[0-9]+' CMakeLists.txt)
          echo "CMake Version: ${CMAKE_VERSION}"
          if [ "${TAG_NAME#v}" != "$CMAKE_VERSION" ]; then
            echo "::error::Version mismatch! Git tag is '${TAG_NAME}' but CMake version is '${CMAKE_VERSION}'."
            exit 1
          fi
          
          echo "version=${CMAKE_VERSION}" >> $GITHUB_OUTPUT
          echo "tag_name=${TAG_NAME}" >> $GITHUB_OUTPUT

      # 步骤 4: 准备并生成发布文档 (已修改)
      - name: Generate Release Documents
        run: |
          cp CHANGELOG.md version.md
          echo "Created version.md"
          
          PDF_FILENAME="version-${{ steps.version_check.outputs.version }}.pdf"
          
          # 使用 --pdf-engine=xelatex 来指定新的编译器
          # 使用 -V mainfont="Noto Sans" 来指定一个支持 Unicode 的主字体
          pandoc version.md \
            --pdf-engine=xelatex \
            -V mainfont="Noto Sans" \
            -o "${PDF_FILENAME}"
          
          echo "Generated ${PDF_FILENAME}"

      # 步骤 5: 创建 GitHub Release 并上传产物
      - name: Create GitHub Release and Upload Artifacts
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ steps.version_check.outputs.tag_name }}
          body_path: CHANGELOG.md
          files: |
            version.md
            version-*.pdf